Problem Statement
Take an array with n elements with possibly duplicate elements as the input. The task is to find the index of the first occurrences of the element x in the array and, if it is not present, return -1.



import java.util.*;
class Main {
  public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int a[]=new int[n];
  
  for(int i = 0; i < n; i++){
  a[i]=sc.nextInt();
  }

 int x=sc.nextInt();

  for(int i = 0; i<n ; i++){
     if(a[i] == x){
    System.out.println(i);
     break;
    }
    else if (i == n-1 && a[i] != x) {
    System.out.println("-1");
       }
      }
    }
  }
  
  ******************************************************************************
  
  import java.util.*;
class Main {
  public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int a[]=new int[n];
  
  for(int i = 0; i < n; i++){
  a[i]=sc.nextInt();
  }

 int x=sc.nextInt();
 int si = 0;
 System.out.println(firstIndexBetter(a, x, si));
    }
  
  public static int firstIndexBetter(int a[], int x, int si) {
    if(si == a.length) {
        return -1;
    } 
      
    if(a[si] == x) {
        return si;
    } 
    
    int k = firstIndexBetter(a, x, si + 1);
    return k;
    }
  }
  
  
  
  
Sample Input 1 :
8
7 5 2 11 2 43 1 1
2
Sample Output 1 :
2

Sample Input 2 :
8
7 5 2 11 2 43 1 1
10
Sample Output 2 :
-1
